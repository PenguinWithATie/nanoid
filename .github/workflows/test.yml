name: Build and tests

on:
  push:
    branches: [ main, 'v0.[0-9]+' ]
  pull_request:
    branches: [ main, 'v0.[0-9]+' ]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    name: "Tests: ${{ matrix.os }} / ${{ matrix.rust_target }}@${{ matrix.channel }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        channel: [stable, beta, nightly]
        rust_target: [x86_64-gnu, x86_64-msvc, x86_64-apple-darwin]
        exclude:
        - os: macos-latest
          rust_target: x86_64-gnu
        - os: macos-latest
          rust_target: x86_64-msvc
        - os: ubuntu-latest
          rust_target: x86_64-msvc
        - os: ubuntu-latest
          rust_target: x86_64-apple-darwin
        - os: windows-latest
          rust_target: x86_64-apple-darwin
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install toolchain
      run: rustup update --force-non-host ${{ matrix.channel }}-${{ matrix.rust_target }} && rustup default ${{ matrix.channel }}-${{ matrix.rust_target }}

    - name: Install cargo-hack
      run: cargo install cargo-hack

    - name: Each version feature
      run: cargo hack test --lib --each-feature

    - name: All features
      run: cargo hack test --lib --all-features

    - name: Docs
      run: cargo test --all-features --doc

    - name: Examples
      run: cargo test --all-features --examples
